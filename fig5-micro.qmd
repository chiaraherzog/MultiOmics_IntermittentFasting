---
title: "Microbiome data (F5, ED8+9, ED10)"
format:
  html:
    toc: true
    code-fold: true
    code-overflow: wrap
    code-tools: true
---

# Figures

::: {.panel-tabset}

## Main Figure 5

![](figures-png/figure5-microbiome_revised.png)

## Extended Data Figure 8

![](figures-png/e8_microbiome.png)

## Extended Data Figure 9

![](figures-png/e9_microbiome.png)

:::

# Code

## Setup

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, message = F, warning = F, eval = F)
```

```{r libs}
# if(!require('ampvis2')){remotes::install_github("kasperskytte/ampvis2")}

# deal with Windows font issue
if (Sys.info()["sysname"] == "Windows") {
  library(extrafont)
  font_import(pattern = "ariblk", prompt = FALSE)
  loadfonts(device = "all")
}

suppressWarnings(suppressMessages({
  library(tidyverse)
  library(patchwork)
  library(kableExtra)
  library(ggpubr)
  library(ggtext)
  library(ggnewscale)
  library(broom)
  library(ComplexHeatmap)
  library(ggh4x)
  library(MultiAssayExperiment)
  library(ampvis2)
  library(vegan)
  library(factoextra)
  library(FactoMineR)
  library(RColorBrewer)
  library(viridis)
  library(rcartocolor)
  library(openxlsx)
  }))
```

```{r colors}

cols <- c("#1b69a1", "#48a0af", "#71b5a9", "#ec6669", "#f39668", "#bd647d", "#832c9b", "#5f70a8")

```

```{r functions}

### general helper functions (Chiara) ###----
source("src/paired_longitudinal_compliance.R")
source("src/paired_intervention_compliance.R")

### microbiome helper functions (Charlotte) ###----
source("src/plot_taxa_heatmap.R")
source("src/pc_microbiomes.R")
source("src/feat_corr_age_menopauze.R")
source("src/feat_corr_bmi.R")
source("src/relabel_microbiomefeat.R")
source("src/plotAlpha.R")
source("src/FBratio.R")
source("src/plot_lmm_heatmap_fragmented_v3_microbiome.R")
source("src/scan_selection_microbfunc_heatmap_v2.R")
source("src/scan_selection_microbfunc_heatmap_v3.R")

```


```{r count_tables}

# prepare ASVtables (needed for full taxonomy, count data) and covariates 
# spurious ASVs removed
# only complete cases M0-M6 kept

vars <- read.table("src/clinical_variables.csv", header = T, sep = ',') |> dplyr::pull(x) # select clinical variables of interest
features <- c("interventionId", "subjectId", "visitId", "time", "compliance", "comprate", "mpstatrs", "age_at_consent", "bmi_at_consent", "pattern", "smoking_ever", "etohu_curr", "diet", "preg_ever", "intactcurr")
load("data/data_raw.Rdata")
metadat <- colData(data) %>% 
  as.data.frame() %>%
  select(all_of(features)) %>%
  rownames_to_column(var="sampleId")

ASVtable_saliva <- readRDS("~/Dropbox/tg-data-prep/prep-scripts/11-preprocessed/2-microbiome/6-study-arm-subsets/if1/0-output/ASVtable_saliva_IK.Rds")
pheno_saliva <- metadat %>%
  mutate(sampleId = paste0(sampleId,"SM")) %>%
  filter(sampleId %in% colnames(ASVtable_saliva)[str_detect(colnames(ASVtable_saliva), "SM")]) %>%
  droplevels()

ASVtable_stool <- readRDS("~/Dropbox/tg-data-prep/prep-scripts/11-preprocessed/2-microbiome/6-study-arm-subsets/if1/0-output/ASVtable_stool_IK.Rds")
pheno_stool <- metadat %>%
  mutate(sampleId = paste0(sampleId,"FM")) %>%
  filter(sampleId %in% colnames(ASVtable_stool)[str_detect(colnames(ASVtable_stool), "FM")]) %>%
  droplevels()

```

# Overview detected taxa

## Families

* Only those with minimum relative abundance of 10%

a) saliva

```{r}

p <- plot_taxa_heatmap(ASVtable_saliva, pheno_saliva, "Family", NULL, 10, "SM", cols)

p

```

```{r ext_9e, eval = F}

cairo_pdf("out/pdf/ext9e.pdf", width = 5.5, height = 3.5)
print(p)
dev.off()

```

b) stool

```{r }

p <- plot_taxa_heatmap(ASVtable_stool, pheno_stool, "Family", NULL, 10, "FM", cols)

p

```

```{r ext_9f, eval = F}

cairo_pdf("out/pdf/ext9f.pdf", width = 5.5, height = 3.5)
print(p)
dev.off()

```

# PCA

## ASV-level

* Combined plots (Extend figure 8. 8a-b)

```{r }

# Load data in raw format for PCA
load("data/data_raw.Rdata")
features <- c("interventionId", "subjectId", "visitId", "compliance", "mpstatrs", "age_at_consent", "bmi_at_consent", "smoking_ever", "etohu_curr", "diet", "preg_ever")

# saliva
exp <- c("Saliva microbiome: ASVs")
df_raw_wide <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18"))
colnames(df_raw_wide) <- gsub("Saliva.microbiome..ASVs_", "", colnames(df_raw_wide))


out1 <- pc_microbiomes(df_raw_wide,features,"hellinger",3,"Saliva",cols[2])

# stool
exp <- c("Stool microbiome: ASVs")
df_raw_wide <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18"))
colnames(df_raw_wide) <- gsub("Stool.microbiome..ASVs_", "", colnames(df_raw_wide))


out2 <- pc_microbiomes(df_raw_wide,features,"hellinger",3,"Stool","#964B00")

p <- out1[[2]] + ggtitle("Saliva") + out2[[2]] + ggtitle("Stool") + plot_layout(guides = "collect")

p

```

```{r ext_8a, eval = F}

cairo_pdf("out/pdf/ext8a.pdf", width = 7, height = 3.5)
print(p)
dev.off()


```

```{r }

p <- out1[[3]] + out2[[3]] 

p
```


```{r ext_8b, eval=F}
cairo_pdf("out/pdf/ext8b.pdf", width = 3.75, height = 3)
print(p)
dev.off()

```


### M0 feature association with age and menopauze

#### Kendall

a) saliva (pval < 0.01)

```{r}

# per sample type

source("src/feat_corr_age_menopauze.R")

# load in data M0 raw
exp <- c("Saliva microbiome: ASVs")
load("data/data_raw.Rdata")
features <- c("subjectId", "visitId","interventionId", "age_at_consent","mpstatrs")
dat <- as.data.frame(longFormat(data[,,exp],
                                   colData = features)) %>% 
  dplyr::filter(interventionId!='S' & visitId == "M0") %>%
  select(-assay, -primary, -colname, -visitId) %>%
  dplyr::rename(ASV=rowname)
dat <- relabel_microbiomefeat(dat,ASVtable_saliva,"ASV","Family") # relabel

p <- feat_corr_age_menopauze(dat_long = dat,
                        continous_corr_type = "kendall",
                        pval = 0.01,
                        pval_select = "both",
                        title = "M0 \nrel. abund.",
                        change = F)

p

```

```{r ext_8c, eval=F}
cairo_pdf("out/pdf/ext8c.pdf", width = 6.5, height = 4.5)
print(p)
dev.off()

```

b) stool (pval < 0.01)

```{r}

# per sample type

# load in data M0 raw
exp <- c("Stool microbiome: ASVs")
load("data/data_raw.Rdata")
features <- c("subjectId", "visitId","interventionId", "age_at_consent","mpstatrs")
dat <- as.data.frame(longFormat(data[,,exp],
                                   colData = features)) %>% 
  dplyr::filter(interventionId!='S' & visitId == "M0") %>%
  select(-assay, -primary, -colname, -visitId) %>%
  dplyr::rename(ASV=rowname)
dat <- relabel_microbiomefeat(dat,ASVtable_stool,"ASV","Family") # relabel

p <- feat_corr_age_menopauze(dat_long = dat,
                        continous_corr_type = "kendall",
                        pval = 0.01,
                        pval_select = "both",
                        title = "M0 \nrel. abund.",
                        change = F)
p

```

```{r ext_8d, eval=F}
cairo_pdf("out/pdf/ext8d.pdf", width = 6.5, height = 3.5)
print(p)
dev.off()

```

## family-level

* Combined plots (Main Fig. 5a-b)

```{r }

# Load data in raw format for PCA
load("data/data_raw.Rdata")
features <- c("interventionId", "subjectId", "visitId", "compliance", "mpstatrs", "age_at_consent", "bmi_at_consent", "smoking_ever", "etohu_curr", "diet", "preg_ever")

# saliva
exp <- c("Saliva microbiome: families")
df_raw_wide <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18"))
colnames(df_raw_wide) <- gsub("Saliva.microbiome..families_", "", colnames(df_raw_wide))


out1 <- pc_microbiomes(df_raw_wide,features,"hellinger",3,"Saliva",cols[2])

# stool
exp <- c("Stool microbiome: families")
df_raw_wide <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18"))
colnames(df_raw_wide) <- gsub("Stool.microbiome..families_", "", colnames(df_raw_wide))


out2 <- pc_microbiomes(df_raw_wide,features,"hellinger",3,"Stool","#964B00")

p <- out1[[2]] + ggtitle("Saliva") + out2[[2]] + ggtitle("Stool") + plot_layout(guides = "collect")

p

```

```{r main_5a, eval = F}

cairo_pdf("out/pdf/5a.pdf", width = 7, height = 3.5)
print(p)
dev.off()


```

```{r }

p <- out1[[3]] + out2[[3]] 

p
```


```{r main_5b, eval=F}
cairo_pdf("out/pdf/5b.pdf", width = 3.75, height = 3)
print(p)
dev.off()

```


# Alpha-diversity

## changes over time (high compliance)

* No significant changes over time, considering highly compliant participants only

```{r, message=FALSE,warning=FALSE, echo=FALSE}

# a - saliva
d <- amp_load(otutable=ASVtable_saliva,
              metadata=pheno_saliva)

dmin <- min(colSums(d$abund))

d2 <- amp_filter_samples(d,
                         compliance %in% c("high"), 
                         normalise = FALSE)
n <- d2$metadata %>% pull(subjectId) %>% unique() %>% length()

plota <- plotAlpha(d2,dmin, paste0("Saliva, high compliance (n=",n, ")"))

plota

# b - stool 

d <- amp_load(otutable=ASVtable_stool,
              metadata=pheno_stool)

dmin <- min(colSums(d$abund))
d2 <- amp_filter_samples(d,
                         compliance %in% c("high"), 
                         normalise = FALSE)
n <- d2$metadata %>% pull(subjectId) %>% unique() %>% length()

plotb <- plotAlpha(d2,dmin, paste0("Stool, high compliance (n=",n, ")"))

plotb

```

```{r ext_9ab, eval = F}

cairo_pdf("out/pdf/ext9a.pdf", width = 5.25, height = 3)
print(plota)
dev.off()

cairo_pdf("out/pdf/ext9b.pdf", width = 5.25, height = 3)
print(plotb)
dev.off()

```

## Saliva: M0 relative abundance correlation with buccal IC

```{r}

# calculate alpha diversity for all samples
d <- amp_load(otutable=ASVtable_saliva,
              metadata=pheno_saliva)

dmin <- min(colSums(d$abund)) # rarify to dmin

alphadiversity <- amp_alphadiv(d, measure = c("shannon", "simpson","observed","invsimpson"), rarefy = dmin, richness = TRUE) %>%
  dplyr::select(sampleId,Chao1,Shannon) %>%
  dplyr::mutate(primary = gsub("SM","",sampleId))

# grab IC content buccals
exp <- c("Composite methylation scores: buccal")
load("data/data_raw.Rdata")
features <- c("interventionId", "visitId", "compliance")
dat <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18")) %>%
  dplyr::filter(primary %in% c(alphadiversity$primary)) %>%
  dplyr::select(-interventionId, -visitId, -compliance)
colnames(dat) <- gsub("Composite.methylation.scores..buccal_", "", colnames(dat))
dat <- dat %>%
  dplyr::select(primary,ic) %>%
  dplyr::full_join(alphadiversity)

## M0 correlation

datM0 <- dat %>% dplyr::filter(grepl("M0",primary))

p1 <- datM0 %>%
  ggplot(aes(x = ic, y = Chao1)) +
  geom_point(size = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "#1b69a1") +
  stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9) +
  xlim(0,1) +
  xlab("Immune cell proportion buccal\n(epigenetics)") +
  ylab("Chao1 richness saliva\n(microbiome)") +
  theme_minimal()
p2 <- datM0 %>%
  ggplot(aes(x = ic, y = Shannon)) +
  geom_point(size = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "#1b69a1") +
  stat_cor(method = "pearson", label.x = 0.1, label.y = 0.9) +
  xlim(0,1) +
  xlab("Immune cell proportion buccal\n(epigenetics)") +
  ylab("Shannon diversity saliva\n(microbiome)") +
  theme_minimal()

plot <- p1 + p2

plot


```

```{r ext_9d, eval = F}

cairo_pdf("out/pdf/ext9d.pdf", width = 5.25, height = 3)
print(plot)
dev.off()

```


- not true for cervical samples predicted IC content!

```{r}

# sanity check, check cervical IC

# grab IC content cervix
exp <- c("Composite methylation scores: cervical")
load("data/data_raw.Rdata")
features <- c("interventionId", "visitId", "compliance")
dat <- as.data.frame(wideFormat(data[,,exp],
                                   colData = features)) |> 
  dplyr::filter(interventionId!='S' & !visitId %in% c("M12", "M18")) %>%
  dplyr::filter(primary %in% c(alphadiversity$primary)) %>%
  dplyr::select(-interventionId, -visitId, -compliance)
colnames(dat) <- gsub("Composite.methylation.scores..cervical_", "", colnames(dat))
dat <- dat %>%
  dplyr::select(primary,ic) %>%
  dplyr::full_join(alphadiversity)

## M0 correlation

datM0 <- dat %>% dplyr::filter(grepl("M0",primary))

p1 <- datM0 %>%
  ggplot(aes(x = ic, y = Chao1)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  stat_cor(method = "pearson", label.x = 0.5, label.y = 0.9) +
  xlim(0,1) +
  xlab("Immune cell proportion cervical sample\n(epigenetics)") +
  ylab("Chao1 richness saliva sample\n(microbiome)") +
  theme_minimal()
p2 <- datM0 %>%
  ggplot(aes(x = ic, y = Shannon)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  stat_cor(method = "pearson", label.x = 0.5, label.y = 0.9) +
  xlim(0,1) +
  xlab("Immune cell proportion cervical sample\n(epigenetics)") +
  ylab("Shannon diversity saliva sample\n(microbiome") +
  theme_minimal()

p1 + p2


```


# Stool: ratio Firmicutes/Bacteroidota

* No significant changes over time, considering highly compliant participants only

```{r}

# calculate ratio and add pheno
dat <- calc_FBratio(ASVtable_stool) %>% 
  full_join(pheno_stool, by = "sampleId") 
dat2 <- calc_CBratio(ASVtable_stool)
dat <- full_join(dat,dat2, by = "sampleId") %>%
  filter(compliance == "high") 

n <- dat %>% pull(subjectId) %>% unique() %>% length()

p1 <- plot_FBratio(dat = dat, 
             remove.outliers = F,
             subset = paste0("Stool, high compliance (n=",n, ")"))

p2 <- plot_CBratio(dat = dat, 
             remove.outliers = F,
             subset = "")

plot <- p1 + p2

plot

```

```{r ext_9c, eval = F}

cairo_pdf("out/pdf/ext9c.pdf", width = 5.25, height = 3)
print(plot)
dev.off()

```


# Differential abundance lmm

- lmm models are ran on CLR transformed microbiome ASV features (on reviewer's request) or TSS normalized family features, changes to M0
- interventionId (and interaction with time) is considered separately with the other omes (on reviewer's request)

- **fragmented model_v3** for ASV and family CLR transfored data: <br>
    * minimal model: plotted **visitId term** from lmm ~ age + bmi + visitId + (1 | subjectId) -> "time"
    * basic model: plotted **visitId:compliance** from lmm ~ age + bmi + visitId + compliance + visitId:compliance + (1 | subjectId) -> "high compliance"
    * correlation of the relative abundance of each feature with age and bmi at baseline (stool), or with buccal_ic at baseline (saliva) is shown as well

- **scan_selection_microbiomefunc_v2** for KO predictions within selected pathways (high compliance only): <br>
    * Intervention (higher compliance): plotted **visitId term** from lmm ~ age + bmi + visitId + interventionId + visitId:interventionId + (1 | subjectId) -> "time"
    * Intervention (higher compliance): **visitId:interventionId** from lmm ~ age + bmi + visitId + interventionId + visitId:interventionId + (1 | subjectId) -> "MCT"
    

```{r}

# results lmm
out_lmm_1 <- get(load("out/out_lmm_factor.Rdata"))
out_lmm_ko <- get(load("out/out_lmm_factor_ko.Rdata"))

```

## ASV-level

### Fragmented model_v3

* only features with unadjusted p-value < 0.01 for at least one time estimate are shown (most of the significant compliance features seem to be driven by outliers)
* stars indicated significant (observed) p-values that are also lower than p-values generated from random permuations (threshold 0.05)
* stars are bold when FDR < 0.05 (FDR applied across all terms in the model, per assay, more conservative approach)
* feature names are bold when FDR <0.05 for an M6 estimate (time or time:compliance interaction)
<br>

#### saliva

```{r  fig.width = 6, fig.height = 12}

# note 5 missing features in table had 0 abundance in asv table subsets, but where considered in the lmm models on clr transformed data
dat_relab <- ASVtable_saliva %>%
  mutate(label = paste0(Family,";",OTU)) %>%
  select(OTU,label)%>%
  dplyr::rename(x=OTU)

plot <- plot_lmm_heatmap_frag_v3(exp = "Saliva microbiome: ASVs_clr_ASV", 
                      lmm_data_time = out_lmm_1$`Minimal model`,
                      lmm_data_compliance = out_lmm_1$`Basic model with BMI`,
                      relabel = dat_relab,
                      age_cor = F,
                      bmi_cor = F,
                      buccal_ic_cor = T,
                      pval_threshold = 0.01,
                      cluster = "cluster")

plot
```

#### stool

```{r  fig.width = 6, fig.height = 9}

dat_relab <- ASVtable_stool %>%
  mutate(label = paste0(Family,";",OTU)) %>%
  select(OTU,label)%>%
  dplyr::rename(x=OTU)

plot <- plot_lmm_heatmap_frag_v3(exp = "Stool microbiome: ASVs_clr_ASV", 
                      lmm_data_time = out_lmm_1$`Minimal model`,
                      lmm_data_compliance = out_lmm_1$`Basic model with BMI`,
                      relabel = dat_relab,
                      age_cor = T,
                      bmi_cor = T,
                      buccal_ic_cor = F,
                      pval_threshold = 0.01,
                      cluster = "cluster")

plot
```

## Family-level

### Fragmented model_v3

* only features with unadjusted p-value < 0.01 for at least one estimate are shown
* stars indicated significant (observed) p-values that are also lower than p-values generated from random permuations (threshold 0.05)
* stars are bold when FDR < 0.05 (FDR applied across all terms in the model, per assay, more conservative approach)
* feature names are bold when FDR <0.05 for an M6 estimate (time or time:compliance interaction)
<br>

#### saliva

```{r  fig.width = 6, fig.height = 3.5}

dat_relab <- ASVtable_saliva %>%
  mutate(label = paste0(Phylum,";",Family)) %>%
  select(Family,label)%>%
  distinct() %>%
  dplyr::rename(x=Family)

plot <- plot_lmm_heatmap_frag_v3(exp = "Saliva microbiome: families", 
                      lmm_data_time = out_lmm_1$`Minimal model`,
                      lmm_data_compliance = out_lmm_1$`Basic model with BMI`,
                      relabel = dat_relab,
                      age_cor = F,
                      bmi_cor = F,
                      buccal_ic_cor = T,
                      pval_threshold = 0.01,
                      cluster = "cluster")

plot
```

```{r main_5c, eval=F}

cairo_pdf("out/pdf/5c.pdf", width = 5, height = 3.25)
print(plot)
dev.off()

```


```{r data_examples_saliva}
load("data/data_baseline_change.Rdata")

df <- longFormat(data[,,'Saliva microbiome: families'], colDataCols = c("interventionId", "subjectId", "visitId", "time", "compliance", "comprate", "mpstatrs", "age_at_consent", "bmi_at_consent", "pattern", "smoking_ever", "etohu_curr", "diet", "preg_ever", "intactcurr")) |> 
  as.data.frame() |> 
  dplyr::filter(interventionId != 'S' & ! visitId %in% c("M12", "M18")) |> 
  dplyr::mutate(compliance = factor(compliance, levels = c("low", "medium", "high"))) |> 
  dplyr::filter(!is.na(value))
```

```{r main_5d}
ylab <- '<b>∆ Leptotrichiaceae</b><br>(saliva)'

p <- paired_longitudinal_compliance(df,
                               variable = 'Leptotrichiaceae',
                               p = 'p.signif',
                               ylab = ylab,
                               nn = 4,
                               fdr = T) 

cairo_pdf(here("out/pdf/5d.pdf"),
          width = 4, height = 2.5)
print(p)
dev.off()
```

```{r main_5e}

ylab <- '<b>∆ Absconditabacteriales_unk1</b><br>(saliva)'

p <- paired_longitudinal_compliance(df,
                               variable = 'Absconditabacteriales_unk1',
                               p = 'p.signif',
                               ylab = ylab,
                               nn = 4,
                               fdr = T) 

cairo_pdf(here("out/pdf/5e.pdf"),
          width = 4, height = 2.5)
print(p)
dev.off()
```

#### stool

```{r  fig.width = 6, fig.height = 3.5}

dat_relab <- ASVtable_stool %>%
  mutate(label = paste0(Phylum,";",Family)) %>%
  select(Family,label)%>%
  distinct() %>%
  dplyr::rename(x=Family)

plot <- plot_lmm_heatmap_frag_v3(exp = "Stool microbiome: families", 
                      lmm_data_time = out_lmm_1$`Minimal model`,
                      lmm_data_compliance = out_lmm_1$`Basic model with BMI`,
                      relabel = dat_relab,
                      age_cor = T,
                      bmi_cor = T,
                      buccal_ic_cor = F,
                      pval_threshold = 0.01,
                      cluster = "cluster")

plot
```

```{r main_5f, eval=F}

cairo_pdf("out/pdf/5f.pdf", width = 5, height = 2)
print(plot)
dev.off()

```


## Predicted KO: major gut microbiota-derived metabolites

* high compliance individuals only
* only features with unadjusted p-value < 0.05 for at least one estimate are shown
* stars are bold when FDR < 0.05 (FDR applied across all terms in the model)

### Relative abundance data, MCT effect

```{r fig.width = 12, fig.height = 5}

df <- readRDS("out/gut_metabolites_functional_scan1.Rds") %>%
  mutate(x = Knumber,label = paste0(x,"\n",name)) %>%
  select(-enzyme) %>%
  distinct()

p <- scan_selection_microbfunc_heatmap_v2(exp = "Stool microbiome: KO_K",
                                  lmm_data_time = out_lmm_ko$`Intervention (higher compliance)`,
                                  lmm_data_int = out_lmm_ko$`Intervention (higher compliance)`,
                                  selection=df,
                                  pval_threshold = 0.05)

p

```


```{r fig.width = 12, fig.height = 5}

df <- readRDS("out/gut_metabolites_functional_scan1.Rds") %>%
  mutate(x = Knumber,label = paste0(x,"\n",name)) %>%
  select(-enzyme) %>%
  distinct()

p <- scan_selection_microbfunc_heatmap_v3(exp = "Stool microbiome: KO_K",
                                  lmm_data_time = out_lmm_ko$`Intervention (higher compliance)`,
                                  selection=df,
                                  pval_threshold = 0.05)

p

```

```{r main_5g}

cairo_pdf("out/pdf/5g.pdf", width = 6, height = 4.75)
print(p)
dev.off()

```

### CLR transformed data, MCT effect

```{r fig.width = 12, fig.height = 5}

df <- readRDS("out/gut_metabolites_functional_scan1.Rds") %>%
  mutate(x = Knumber,label = paste0(x,"\n",name)) %>%
  select(-enzyme) %>%
  distinct()

p <- scan_selection_microbfunc_heatmap_v2(exp = "Stool microbiome: KO_clr",
                                  lmm_data_time = out_lmm_ko$`Intervention (higher compliance)`,
                                  lmm_data_int = out_lmm_ko$`Intervention (higher compliance)`,
                                  selection=df,
                                  pval_threshold = 0.05)

p

```

